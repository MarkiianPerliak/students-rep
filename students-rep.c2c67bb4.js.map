{"mappings":"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","sources":["<anon>","src/app.js"],"sourcesContent":["var $e73bf42412feb220$exports = {};\nconst $e73bf42412feb220$var$form = document.getElementById(\"add-student-form\");\nconst $e73bf42412feb220$var$submit = document.querySelector(\".submit-btn\");\nconst $e73bf42412feb220$var$getStudentsBtn = document.getElementById(\"get-students-btn\");\nconst $e73bf42412feb220$var$modal2 = document.querySelector(\".modal2\");\nconst $e73bf42412feb220$var$backdrop2 = document.querySelector(\".backdrop2\");\nconst $e73bf42412feb220$var$closeModal2 = document.querySelector(\".close-modal2\");\nconst $e73bf42412feb220$var$dataSendButton2 = document.querySelector('.datasend2');\nconst $e73bf42412feb220$var$modalForm2 = document.querySelector(\".modal-form2\");\n// Функція для додавання нового студента\nconst $e73bf42412feb220$var$addStudent = async (student)=>{\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(student),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    };\n    try {\n        return await fetch(\"https://68a180f86f8c17b8f5da0043.mockapi.io/students/students\", options);\n    } catch (error) {\n        return error;\n    }\n};\n// Функція для оновлення студента\nconst $e73bf42412feb220$var$updateAPI = async (object, id)=>{\n    const options = {\n        method: \"PUT\",\n        body: JSON.stringify(object),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    };\n    try {\n        return await fetch(`https://68a180f86f8c17b8f5da0043.mockapi.io/students/students/${id}`, options);\n    } catch (error) {\n        return error;\n    }\n};\n// Функція для видалення студента\nconst $e73bf42412feb220$var$deleteProduct = async (posthid)=>{\n    try {\n        return await fetch(`https://68a180f86f8c17b8f5da0043.mockapi.io/students/students/${posthid}`, {\n            method: \"DELETE\"\n        });\n    } catch (error) {\n        return error;\n    }\n};\n// Функція для відображення студентів у таблиці\nfunction $e73bf42412feb220$var$renderStudents(students) {\n    const thbody = document.querySelector(\".thbody\");\n    students.forEach((student)=>{\n        let text = \"\";\n        if (student.isEnrolled === true) text = \"Online\";\n        else text = \"Offline\";\n        const htmlCode = `\n    <tr>\n      <td class=\"id\">${student.id}</td>\n      <td>${student.name}</td>\n      <td>${student.age}</td>\n      <td>${student.course}</td>\n      <td>${student.skills}</td>\n      <td>${student.email}</td>\n      <td>${text}</td>\n      <td><button class=\"delete\">Delete</button><button class=\"update\">Update</button></td>\n    </tr>        \n        `;\n        thbody.insertAdjacentHTML(\"beforeend\", htmlCode);\n    });\n}\n// Функція для отримання всіх студентів\nconst $e73bf42412feb220$var$getStudents = async ()=>{\n    try {\n        return await fetch(\"https://68a180f86f8c17b8f5da0043.mockapi.io/students/students\");\n    } catch (error) {\n        return error;\n    }\n};\n$e73bf42412feb220$var$getStudentsBtn.addEventListener(\"click\", (event)=>{\n    $e73bf42412feb220$var$getStudents().then((data)=>data.json()).then((resultdata)=>{\n        const thbody = document.querySelector(\".thbody\");\n        thbody.innerHTML = \"\";\n        $e73bf42412feb220$var$renderStudents(resultdata);\n        const deletebtns = document.querySelectorAll(\".delete\");\n        const updatebtns = document.querySelectorAll(\".update\");\n        deletebtns.forEach((button)=>{\n            button.addEventListener(\"click\", (event)=>{\n                const theid = button.parentElement.parentElement.querySelector(\".id\").textContent;\n                $e73bf42412feb220$var$deleteProduct(theid);\n            });\n        });\n        updatebtns.forEach((button)=>{\n            button.addEventListener(\"click\", (event)=>{\n                $e73bf42412feb220$var$backdrop2.classList.remove(\"hidden\");\n                $e73bf42412feb220$var$modalForm2.addEventListener(\"submit\", (event)=>{\n                    event.preventDefault();\n                    const theid = button.parentElement.parentElement.querySelector(\".id\").textContent;\n                    const name = event.target.elements.name.value;\n                    const age = event.target.elements.age.value;\n                    const course = event.target.elements.course.value;\n                    const skills = event.target.elements.skills.value.split(\",\").map((s)=>s.trim());\n                    console.log(skills);\n                    const email = event.target.elements.email.value;\n                    const enrolled = event.target.elements.enrolled;\n                    let enrolledchecked = \"\";\n                    if (enrolled.checked) enrolledchecked = true;\n                    else enrolledchecked = false;\n                    const object = {\n                        \"name\": `${name}`,\n                        \"age\": Number(age),\n                        \"course\": `${course}`,\n                        \"skills\": skills,\n                        \"email\": `${email}`,\n                        \"isEnrolled\": enrolledchecked\n                    };\n                    $e73bf42412feb220$var$updateAPI(object, theid);\n                });\n            });\n        });\n    });\n});\n$e73bf42412feb220$var$closeModal2.addEventListener(\"click\", (event)=>{\n    $e73bf42412feb220$var$backdrop2.classList.add(\"hidden\");\n});\n$e73bf42412feb220$var$dataSendButton2.addEventListener(\"click\", (event)=>{\n    $e73bf42412feb220$var$backdrop2.classList.add(\"hidden\");\n});\n$e73bf42412feb220$var$form.addEventListener(\"submit\", (event)=>{\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n    const age = event.target.elements.age.value;\n    const course = event.target.elements.course.value;\n    const skills = event.target.elements.skills.value.split(\",\").map((s)=>s.trim());\n    const email = event.target.elements.email.value;\n    const enrolled = event.target.elements.enrolled;\n    let enrolledchecked = \"\";\n    if (enrolled.checked) enrolledchecked = true;\n    else enrolledchecked = false;\n    const object = {\n        \"name\": `${name}`,\n        \"age\": Number(age),\n        \"course\": `${course}`,\n        \"skills\": skills,\n        \"email\": `${email}`,\n        \"isEnrolled\": enrolledchecked\n    };\n    $e73bf42412feb220$var$addStudent(object);\n});\n\n\n//# sourceMappingURL=students-rep.c2c67bb4.js.map\n","const form = document.getElementById(\"add-student-form\")\r\nconst submit = document.querySelector(\".submit-btn\")\r\nconst getStudentsBtn = document.getElementById(\"get-students-btn\")\r\nconst modal2 = document.querySelector(\".modal2\")\r\nconst backdrop2 = document.querySelector(\".backdrop2\")\r\nconst closeModal2 = document.querySelector(\".close-modal2\")\r\nconst dataSendButton2 = document.querySelector('.datasend2')\r\nconst modalForm2 = document.querySelector(\".modal-form2\");\r\n\r\n// Функція для додавання нового студента\r\n\r\nconst addStudent = async (student) => {\r\n    const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(student),\r\n        headers: {\r\n            \"Content-Type\": \"application/json; charset=UTF-8\",\r\n        },\r\n    };\r\n    try {\r\n        return await fetch(\"https://68a180f86f8c17b8f5da0043.mockapi.io/students/students\", options)\r\n    }catch(error) {\r\n        return error\r\n    }\r\n}\r\n\r\n// Функція для оновлення студента\r\n\r\nconst updateAPI = async (object, id) => {\r\n    const options = {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(object),\r\n        headers: {\r\n            \"Content-Type\": \"application/json; charset=UTF-8\",\r\n        },\r\n    };\r\n    try {\r\n        return await fetch(`https://68a180f86f8c17b8f5da0043.mockapi.io/students/students/${id}`, options)\r\n    }catch(error) {\r\n        return error\r\n    }\r\n}\r\n\r\n// Функція для видалення студента\r\n\r\nconst deleteProduct = async (posthid) => {\r\n    try {\r\n        return await fetch(`https://68a180f86f8c17b8f5da0043.mockapi.io/students/students/${posthid}`, { method: \"DELETE\", })\r\n    }catch(error) {\r\n        return error\r\n    }\r\n}\r\n\r\n// Функція для відображення студентів у таблиці\r\nfunction renderStudents(students) {\r\n    const thbody = document.querySelector(\".thbody\")\r\n    students.forEach(student => {\r\n        let text = \"\";\r\n        if (student.isEnrolled === true) {\r\n            text = \"Online\"\r\n        } else {\r\n            text = \"Offline\"\r\n        }\r\n        const htmlCode = `\r\n    <tr>\r\n      <td class=\"id\">${student.id}</td>\r\n      <td>${student.name}</td>\r\n      <td>${student.age}</td>\r\n      <td>${student.course}</td>\r\n      <td>${student.skills}</td>\r\n      <td>${student.email}</td>\r\n      <td>${text}</td>\r\n      <td><button class=\"delete\">Delete</button><button class=\"update\">Update</button></td>\r\n    </tr>        \r\n        `;\r\n        thbody.insertAdjacentHTML(\"beforeend\", htmlCode)\r\n    })\r\n}\r\n\r\n// Функція для отримання всіх студентів\r\nconst getStudents = async() => {\r\n    try {\r\n        return await fetch(\"https://68a180f86f8c17b8f5da0043.mockapi.io/students/students\")\r\n    }catch(error) {\r\n        return error\r\n    }\r\n}\r\n\r\ngetStudentsBtn.addEventListener(\"click\", (event) => {\r\n    getStudents().then((data) => data.json()).then((resultdata) => {\r\n        const thbody = document.querySelector(\".thbody\")\r\n        thbody.innerHTML = \"\";\r\n        renderStudents(resultdata)\r\n        const deletebtns = document.querySelectorAll(\".delete\")\r\n        const updatebtns = document.querySelectorAll(\".update\")\r\n        deletebtns.forEach(button => {\r\n            button.addEventListener(\"click\", (event) => {\r\n                const theid = button.parentElement.parentElement.querySelector(\".id\").textContent;\r\n                deleteProduct(theid)\r\n            })\r\n        })\r\n        updatebtns.forEach(button => {\r\n            button.addEventListener(\"click\", (event) => {\r\n                backdrop2.classList.remove(\"hidden\")\r\n                modalForm2.addEventListener(\"submit\", (event) => {\r\n                    event.preventDefault()\r\n                    const theid = button.parentElement.parentElement.querySelector(\".id\").textContent;\r\n                    const name = event.target.elements.name.value;\r\n                    const age = event.target.elements.age.value;\r\n                    const course = event.target.elements.course.value;\r\n                    const skills = event.target.elements.skills.value\r\n                        .split(\",\")\r\n                        .map(s => s.trim());\r\n                    console.log(skills)\r\n                    const email = event.target.elements.email.value;\r\n                    const enrolled = event.target.elements.enrolled;\r\n\r\n                    let enrolledchecked = \"\";\r\n                    if (enrolled.checked) {\r\n                        enrolledchecked = true\r\n                    } else {\r\n                        enrolledchecked = false\r\n                    }\r\n                    const object = {\r\n                        \"name\": `${name}`,\r\n                        \"age\": Number(age),\r\n                        \"course\": `${course}`,\r\n                        \"skills\": skills,\r\n                        \"email\": `${email}`,\r\n                        \"isEnrolled\": enrolledchecked\r\n                    }\r\n                    updateAPI(object, theid)\r\n                })\r\n            })\r\n        })\r\n    })\r\n})\r\n\r\n\r\ncloseModal2.addEventListener(\"click\", (event) => {\r\n    backdrop2.classList.add(\"hidden\")\r\n})\r\n\r\ndataSendButton2.addEventListener(\"click\", (event) => {\r\n    backdrop2.classList.add(\"hidden\")\r\n})\r\n\r\nform.addEventListener(\"submit\", (event) => {\r\n    event.preventDefault()\r\n    const name = event.target.elements.name.value;\r\n    const age = event.target.elements.age.value;\r\n    const course = event.target.elements.course.value;\r\n    const skills = event.target.elements.skills.value\r\n        .split(\",\")\r\n        .map(s => s.trim());\r\n    const email = event.target.elements.email.value;\r\n    const enrolled = event.target.elements.enrolled;\r\n\r\n    let enrolledchecked = \"\";\r\n    if (enrolled.checked) {\r\n        enrolledchecked = true\r\n    } else {\r\n        enrolledchecked = false\r\n    }\r\n    const object = {\r\n        \"name\": `${name}`,\r\n        \"age\": Number(age),\r\n        \"course\": `${course}`,\r\n        \"skills\": skills,\r\n        \"email\": `${email}`,\r\n        \"isEnrolled\": enrolledchecked\r\n    }\r\n    addStudent(object)\r\n})"],"names":["$e73bf42412feb220$var$form","document","getElementById","querySelector","$e73bf42412feb220$var$getStudentsBtn","$e73bf42412feb220$var$backdrop2","$e73bf42412feb220$var$closeModal2","$e73bf42412feb220$var$dataSendButton2","$e73bf42412feb220$var$modalForm2","$e73bf42412feb220$var$addStudent","student","options","method","body","JSON","stringify","headers","fetch","error","$e73bf42412feb220$var$updateAPI","object","id","$e73bf42412feb220$var$deleteProduct","posthid","$e73bf42412feb220$var$getStudents","addEventListener","event","then","data","json","resultdata","thbody","innerHTML","students","forEach","text","isEnrolled","htmlCode","name","age","course","skills","email","insertAdjacentHTML","deletebtns","querySelectorAll","updatebtns","button","parentElement","textContent","classList","remove","preventDefault","theid","target","elements","value","split","map","s","trim","console","log","enrolled","enrolledchecked","checked","Number","add"],"version":3,"file":"students-rep.c2c67bb4.js.map"}